{"remainingRequest":"/home/clement/APIetienne/BODIERCOIN/node_modules/babel-loader/lib/index.js!/home/clement/APIetienne/BODIERCOIN/node_modules/eslint-loader/index.js??ref--13-0!/home/clement/APIetienne/BODIERCOIN/src/store/auth.js","dependencies":[{"path":"/home/clement/APIetienne/BODIERCOIN/src/store/auth.js","mtime":1607801764748},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvY2xlbWVudC9BUElldGllbm5lL0JPRElFUkNPSU4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdG9rZW46IG51bGwsCiAgICB1c2VyOiBudWxsCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBhdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBhdXRoZW50aWNhdGVkKHN0YXRlKSB7CiAgICAgIC8vIHJldG91cm4gdHJ1ZSBzaSBpbCB5IGEgdW4gdG9rZW4gKyB1c2VyIGRhbnMgbGUgc3RhdGUsIGZhbHNlIHNpbm9uCiAgICAgIC8vdmFyIGVzdCA9IGZhbHNlOwogICAgICBpZiAoc3RhdGUudG9rZW4gJiYgc3RhdGUudXNlcikgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoc3RhdGUpIHsKICAgICAgLy9yZXRvdXJuZSBsJ3V0aWxpc2F0dWVyCiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfVE9LRU46IGZ1bmN0aW9uIFNFVF9UT0tFTihzdGF0ZSwgdG9rZW4pIHsKICAgICAgc3RhdGUudG9rZW4gPSB0b2tlbjsKICAgIH0sCiAgICBTRVRfVVNFUjogZnVuY3Rpb24gU0VUX1VTRVIoc3RhdGUsIHVzZXIpIHsKICAgICAgc3RhdGUudXNlciA9IHVzZXI7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBzaWduaW46IGZ1bmN0aW9uIHNpZ25pbihfcmVmLCBjcmVkZW50aWFscykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHBzOi8vaGF1dGUtbG9pcmUub3JnL2FwaS9hdXRoL3NpZ25pbicsIHsKICAgICAgICAgICAgICAgICAgLy92w6lyaWZpZSBzaSBtYWlsIGV0IG1kcCBzb250IGxlcyBib25zCiAgICAgICAgICAgICAgICAgICdlbWFpbCc6IGNyZWRlbnRpYWxzWzBdLAogICAgICAgICAgICAgICAgICAncGFzc3dvcmQnOiBjcmVkZW50aWFsc1sxXQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkaXNwYXRjaCgnYXR0ZW1wdCcsIHJlcy5kYXRhLnRva2VuKSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhdHRlbXB0OiBmdW5jdGlvbiBhdHRlbXB0KF9yZWYyLCB0b2tlbikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0LCBzdGF0ZSwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKCiAgICAgICAgICAgICAgICAvL29uIHLDqWN1cMOocmUgbGEgcsOpcG9uc2UgZHUgc2lnbmluIChsZSB0b2tlbiwgb3UgcmllbiBkdSB0b3V0KQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0b2tlbik7CiAgICAgICAgICAgICAgICBpZiAodG9rZW4pIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfVE9LRU4nLCB0b2tlbik7IC8vIG9uIGNoYW5nZSBsZSBzdGF0ZSBlbiBham91dGFudCBsZSB0b2tlbgogICAgICAgICAgICAgICAgICAvL29uIGFqb3V0ZSBsZSB0b2tlbiBhdSBoZWFkZXIgZGFucyBsZSBzdWJzY3JpYmVyLmpzIHBkdCBsZSBjb21taXQgU0VUX1RPS0VOIGNhciBvbiAiw6ljb3V0ZSIgbGEgbXV0YXRpb24gZHUgY29tbWl0CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHN0YXRlLnRva2VuKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2hhdXRlLWxvaXJlLm9yZy9hcGkvYXV0aC9tZScgLy9vbiB0ZXN0ZSBzaSBsZSB0b2tlbiBlc3QgdmFsaWRlCiAgICAgICAgICAgICAgICApOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfVVNFUicsIHJlc3BvbnNlLmRhdGEpOyAvL3NpIG91aSwgb24gc2V0IGxlIHN0YXRlIGF2ZWMgbGVzIHVzZXJzIChyw6lwb25zZSBkdSBhdXRoL21lKQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oNCk7CiAgICAgICAgICAgICAgICAvLyB0b2tlbiBub24gdmFsaWRlID0+IG9uIHN1cHByaW1lIGxlcyBpbmZvcyBzdG9ja8OpZXMgZGFucyBWVUUsIHBhciBudWxsCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZmFpbGVkIGdldCBtZSBBUEkgcmVxdWVzdCA6KSAnKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgbnVsbCk7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9VU0VSJywgbnVsbCk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbNCwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNpZ25vdXQ6IGZ1bmN0aW9uIHNpZ25vdXQoX3JlZjMpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHBzOi8vaGF1dGUtbG9pcmUub3JnL2FwaS9hdXRoL3NpZ25vdXQnKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsIG51bGwpOwogICAgICAgIGNvbW1pdCgnU0VUX1VTRVInLCBudWxsKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/clement/APIetienne/BODIERCOIN/src/store/auth.js"],"names":["axios","namespaced","state","token","user","getters","authenticated","mutations","SET_TOKEN","SET_USER","actions","signin","credentials","dispatch","post","res","data","attempt","commit","get","response","console","log","signout","then"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAGXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,IADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAHI;AAQXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,yBACSJ,KADT,EACgB;AAAE;AACnB;AACA,UAAIA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,IAAzB,EAA+B;AAC5B,eAAO,IAAP;AACF,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ,KARI;AAULA,IAAAA,IAVK,gBAUAF,KAVA,EAUO;AAAE;AACV,aAAOA,KAAK,CAACE,IAAb;AACH;AAZI,GARE;AAuBXG,EAAAA,SAAS,EAAE;AACPC,IAAAA,SADO,qBACGN,KADH,EACUC,KADV,EACiB;AACpBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH,KAHM;AAIPM,IAAAA,QAJO,oBAIEP,KAJF,EAISE,IAJT,EAIe;AAClBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACH;AANM,GAvBA;AAgCXM,EAAAA,OAAO,EAAE;AACCC,IAAAA,MADD,wBACwBC,WADxB,EACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3BC,gBAAAA,QAA2B,QAA3BA,QAA2B;AAAA;AAAA,uBAEvBb,KAAK,CAACc,IAAN,CAAW,yCAAX,EAAsD;AAAE;AACpE,2BAASF,WAAW,CAAC,CAAD,CAD8C;AAElE,8BAAYA,WAAW,CAAC,CAAD;AAF2C,iBAAtD,CAFuB;;AAAA;AAEnCG,gBAAAA,GAFmC;AAAA,iDAOhCF,QAAQ,CAAC,SAAD,EAAYE,GAAG,CAACC,IAAJ,CAASb,KAArB,CAPwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ1C,KATI;AAWCc,IAAAA,OAXD,0BAW6Bd,KAX7B,EAWoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxBe,gBAAAA,MAAwB,SAAxBA,MAAwB,EAAhBhB,KAAgB,SAAhBA,KAAgB;;AAAE;AACvC;AACA,oBAAIC,KAAJ,EAAW;AACPe,kBAAAA,MAAM,CAAC,WAAD,EAAcf,KAAd,CAAN,CADO,CACqB;AAC5B;AACH;;AALoC,oBAMjCD,KAAK,CAACC,KAN2B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAWZH,KAAK,CAACmB,GAAN,CAAU,qCAAV,CAAgD;AAAhD,iBAXY;;AAAA;AAW7BC,gBAAAA,QAX6B;AAcjCF,gBAAAA,MAAM,CAAC,UAAD,EAAaE,QAAQ,CAACJ,IAAtB,CAAN,CAdiC,CAcE;;AAdF;AAAA;;AAAA;AAAA;AAAA;AAgBvB;AACVK,gBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAJ,gBAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACAA,gBAAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;;AAnBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBxC,KAhCI;AAkCLK,IAAAA,OAlCK,0BAkCiB;AAAA,UAAXL,MAAW,SAAXA,MAAW;AAClB,aAAOlB,KAAK,CAACc,IAAN,CAAW,0CAAX,EAAuDU,IAAvD,CAA4D,YAAM;AACrEN,QAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACAA,QAAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;AACH,OAHM,CAAP;AAIH;AAvCI;AAhCE,CAAf","sourcesContent":["\nimport axios from 'axios';\n\n\nexport default {\n    namespaced: true,\n\n    state: {\n        token: null,\n        user: null\n    },\n\n    getters: {\n        authenticated(state) { // retourn true si il y a un token + user dans le state, false sinon\n            //var est = false;\n            if (state.token && state.user) {\n               return true;\n            } else {\n                return false;\n            }\n        },\n\n        user(state) { //retourne l'utilisatuer\n            return state.user;\n        }\n    },\n\n    mutations: {\n        SET_TOKEN(state, token) { \n            state.token = token;\n        },\n        SET_USER(state, user) {\n            state.user = user;\n        }\n    },\n\n    actions: {\n        async signin( { dispatch } , credentials ) { // on appelle la method signin, avec email et mdp\n            \n            let res = await axios.post('https://haute-loire.org/api/auth/signin', { //vérifie si mail et mdp sont les bons\n                'email': credentials[0],\n                'password': credentials[1]\n            });\n            //console.log(res.data);\n            return dispatch('attempt', res.data.token); //en envoie le token de la réponse dans la methode attempt\n        },\n\n        async attempt( { commit, state }, token) { //on récupère la réponse du signin (le token, ou rien du tout)\n            //console.log(token);\n            if (token) {\n                commit('SET_TOKEN', token); // on change le state en ajoutant le token\n                //on ajoute le token au header dans le subscriber.js pdt le commit SET_TOKEN car on \"écoute\" la mutation du commit\n            }\n            if(!state.token) {\n                return\n            }\n\n            try {\n                let response = await axios.get('https://haute-loire.org/api/auth/me' //on teste si le token est valide\n                   \n                );\n                commit('SET_USER', response.data); //si oui, on set le state avec les users (réponse du auth/me)\n            }\n            catch (err) { // token non valide => on supprime les infos stockées dans VUE, par null\n                console.log('failed get me API request :) ');\n                commit('SET_TOKEN', null);\n                commit('SET_USER', null);\n            }\n        },\n\n        signout( { commit } ) {\n            return axios.post('https://haute-loire.org/api/auth/signout').then(() => {\n                commit('SET_TOKEN', null);\n                commit('SET_USER', null);\n            })\n        }\n    }\n}"]}]}