{"remainingRequest":"/home/clement/APIetienne/BODIERCOIN/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clement/APIetienne/BODIERCOIN/src/components/shop/StripePaiement.vue?vue&type=style&index=0&id=928b91de&scoped=true&lang=css&","dependencies":[{"path":"/home/clement/APIetienne/BODIERCOIN/src/components/shop/StripePaiement.vue","mtime":1607801764748},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clement/APIetienne/BODIERCOIN/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ1dHRvbnBheSB7CgogICAgICBjb2xvcjogd2hpdGU7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmEwMDg7OwogICAgICBib3JkZXI6IG5vbmU7CiAgICAgIHBhZGRpbmc6IDE1cHg7CiAgICAgIGJvcmRlci1yYWRpdXM6IDNlbTsKICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgIG1hcmdpbi10b3A6IDJlbTsKICB9Cg=="},{"version":3,"sources":["StripePaiement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StripePaiement.vue","sourceRoot":"src/components/shop","sourcesContent":["<template>\n    <div>\n        You want to buy {{number}} coins.\n        <form id=\"payment-form\">\n        <div>\n            <label for=\"card-element\">\n            Credit or debit card\n            </label>\n            <div id=\"card-element\">\n            <!-- A Stripe Element will be inserted here. -->\n            </div>\n    \n            <!-- Used to display form errors. -->\n            <div id=\"card-errors\" role=\"alert\"></div>\n        </div>\n    \n        <button class=\"buttonpay\" v-on:click=\"bankToken(userId, number)\">Payer</button>\n        </form>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'StripePaiement',\n  props: [\n    \"numberCoin\",\n    \"userId\",\n    \"userName\"\n  ],\n  data() {\n   return{\n     number: this.numberCoin,\n     stripeAPIToken: 'pk_test_51HsUUJEj14OhipKUavWcW48ZdEV1yWmFHCW0ycDia9R8OzDfW3v48ghzDWj55ZojtRdxDvMI7nj1faV9NkqNeSpW000veD7xCF',\n     stripe: '',\n     elements: '',\n     card: ''\n   }\n  },\n  methods:{\n    //include Stripe\n    includeStripe( URL, callback ){\n        console.log('toto')\n        let documentTag = document, tag = 'script',\n            object = documentTag.createElement(tag),\n            scriptTag = documentTag.getElementsByTagName(tag)[0];\n        object.src = '//' + URL;\n        if (callback) { object.addEventListener('load', function (e) { callback(null, e); }, false); }\n        scriptTag.parentNode.insertBefore(object, scriptTag);\n    },\n    /*\n    Configures Stripe by setting up the elements and \n    creating the card element.\n    */\n   postToLaravel(token, number){\n           /* var axios = require('axios');\n            var data = JSON.stringify({\n              \"stripeToken\": token,\n              \"tokenNumber\": number\n            });*/\n\n            //////\n            console.log(token)\n            console.log(number)\n            var axios = require('axios');\n            var data = JSON.stringify({\"stripeToken\":token,\"tokenNumber\":number});\n\n            var config = {\n              method: 'post',\n              url: 'https://haute-loire.org/api/stripe',\n              headers: { \n                'Content-Type': 'application/json'\n              },\n              data : data\n            };\n\n\n            //////\n\n            /*var config = {\n              method: 'post',\n              url: 'https://haute-loire.org/api/stripe',\n              data : data\n            };*/\n\n            axios(config)\n            .then(function (response) {\n              console.log(JSON.stringify(response.data));\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        \n    },\n    bankToken(idDonor, amount){\n        var axios = require('axios');\n        var data = JSON.stringify({\"id_donor\": 1,\"id_receiver\": idDonor,\"amount\": amount});\n\n        console.log(idDonor, amount)\n\n        var config = {\n          method: 'post',\n          url: 'https://haute-loire.org/api/transaction',\n          headers: { \n            'Content-Type': 'application/json'\n          },\n          data : data\n        };\n\n        axios(config)\n        .then(function (response) {\n          console.log(JSON.stringify(response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    configureStripe(fonction, number){\n      console.log('toto')\n      var stripe = window.Stripe( this.stripeAPIToken );\n\n        var elements = stripe.elements()\n        \n        /*\n        const card = stripe.charges.create({\n          amount: 2000,\n          currency: 'eur',\n          source: 'tok_visa',\n          description: 'My First Test Charge (created for API docs)',\n        });*/\n\n        var card = elements.create('card');\n\n        card.mount('#card-element');\n        // Handle form submission.\n        var form = document.getElementById('payment-form');\n        form.addEventListener('submit', function(event) {\n          event.preventDefault();\n        \n          stripe.createToken(card).then(function(result) {\n            if (result.error) {\n              // Inform the user if there was an error.\n              var errorElement = document.getElementById('card-errors');\n              errorElement.textContent = result.error.message;\n            } else {\n              // Send the token to your server.\n              //stripeTokenHandler(result.token);\n              console.log(result.token.id)\n              console.log(number)\n              fonction(result.token.id, number)     \n              //console.log(number)         \n            }\n          })\n        })\n\n        /*\n        function stripeTokenHandler(token) {\n          // Insert the token ID into the form so it gets submitted to the server\n          var form = document.getElementById('payment-form');\n          var hiddenInput = document.createElement('input');\n          hiddenInput.setAttribute('type', 'hidden');\n          hiddenInput.setAttribute('name', 'stripeToken');\n          hiddenInput.setAttribute('value', token.id);\n          form.appendChild(hiddenInput);\n\n          \n          // Submit the form\n          form.submit();\n        }*/\n        // Handle real-time validation errors from the card Element.\n        card.addEventListener('change', function(event) {\n          var displayError = document.getElementById('card-errors');\n          if (event.error) {\n            displayError.textContent = event.error.message;\n          } else {\n            displayError.textContent = '';\n          }\n        });\n\n    },\n    mounted(){\n      console.log('toto')\n      this.includeStripe('js.stripe.com/v3/', function(){\n            this.configureStripe();\n        }.bind(this) );\n      }\n    },\n    created(){\n      const fonction = this.postToLaravel\n      this.includeStripe('js.stripe.com/v3/', function(){\n            this.configureStripe(fonction, this.number);\n        }.bind(this) );  \n    } \n}\n</script> \n<style scoped>\n.buttonpay {\n\n      color: white;\n      background-color: #ffa008;;\n      border: none;\n      padding: 15px;\n      border-radius: 3em;\n      font-weight: bold;\n      margin-top: 2em;\n  }\n</style>"]}]}